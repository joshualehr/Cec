@model IEnumerable<Cec.ViewModels.BuildingsMaterialViewModel>

@{
    ViewBag.Title = "Buildings Material";
    var bmvm = Model.First();
}

<div class="breadcrumb">
    @Html.ActionLink("Projects", "Index", "Project") >
    @Html.ActionLink(bmvm.ProjectDesignation + " Project", "Details", "Project", new { id = bmvm.ProjectId }, null) >
    @Html.ActionLink("Buildings", "Index", new { id = bmvm.ProjectId })
</div>
<h2>Building(s) Material</h2>

@using (Html.BeginForm("BuildingsMaterial", "Building", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <div class="btn-group">
        @Html.ActionLink("Buildings", "Index", new { id = Model.First().ProjectId }, new { @class = "btn btn-primary" })
        <input type="submit" value="Download Data" class="btn btn-default" />
    </div>
    <br />
    <br />
    <table class="table">
        <tr>
            <th>
                <input type="checkbox" onclick="checkAll(this)" /> All
            </th>
            <th>
                Image
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().MaterialDesignation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Total)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitOfMeasure)
            </th>
        </tr>
        @Html.DisplayFor(model => model)
    </table>
}

@section Scripts {
<script>
    function checkAll(bx) {
        var cbs = document.getElementsByTagName('input');
        for (var i = 0; i < cbs.length; i++) {
            if (cbs[i].type == 'checkbox') {
                cbs[i].checked = bx.checked;
            }
        }
    }
</script>
}
