@model Cec.ViewModels.AreaEditViewModel

@{
    ViewBag.Title = "Area";
}
<br />
<p>
    @Html.ActionLink("Projects", "Index", "Project") >
    @Html.ActionLink(Model.ProjectDesignation + " Project", "Details", "Project", new { id = Model.ProjectId }, null) >
    @Html.ActionLink("Buildings", "Index", "Building", new { id = Model.ProjectId }, null) >
    @Html.ActionLink("Building " + Model.BuildingDesignation, "Details", "Building", new { id = Model.BuildingId }, null) >
    @Html.ActionLink("Areas", "Index", new { id = Model.BuildingId })
</p>
<h2>Edit Area @Model.AreaDesignation</h2>
<p>
    @Html.ActionLink("Cancel", "Details", new { id = Model.AreaId })
</p>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.AreaId)
        @Html.HiddenFor(model => model.BuildingId)
        @Html.HiddenFor(model => model.BuildingDesignation)
        @Html.HiddenFor(model => model.ProjectId)
        @Html.HiddenFor(model => model.ProjectDesignation)

        <div class="form-group">
            @Html.LabelFor(model => model.AreaDesignation, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AreaDesignation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AreaDesignation)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ModelId, "Model", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ModelId, (IEnumerable<SelectListItem>)ViewBag.ModelId, new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.ModelId)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.State, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PostalCode, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostalCode)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Status, (IEnumerable<SelectListItem>)ViewBag.Status, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-sm btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script>
        $('ModelId').change(function () {
            var selected = $(this).val();

            if (selected == 'bar') {
                if (!confirm('The model for this area has been changed. Do you want to update the material for this area from the new model?')) {
                    $(this).val($.data(this, 'current')); // added parenthesis (edit)
                    return false;
                }
            }

            $.data(this, 'current', $(this).val());
        });
    </script>*@
}
