@model Cec.ViewModels.ModelMaterialDeleteViewModel

@{
    ViewBag.Title = "Model Material from Model";
}

<p class="nav">
    @Html.ActionLink("Projects", "Index", "Project") >
    @Html.ActionLink(Model.Project + " Project", "Details", "Project", new { id = Model.ProjectId }, null) >
    @Html.ActionLink("Models", "Index", "Model", new { id = ViewBag.BuildingId }, null) >
    @Html.ActionLink("Model " + Model.Model, "Details", "Model", new { id = Model.ModelId }, null)
</p>
<h2 class="text-danger">Are you sure you want to delete @Model.Material from Model @Model.Model?</h2>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    @Html.HiddenFor(model => model.ProjectId)
    @Html.HiddenFor(model => model.Project)
    @Html.HiddenFor(model => model.ModelId)
    @Html.HiddenFor(model => model.Model)
    @Html.HiddenFor(model => model.MaterialId)
    @Html.HiddenFor(model => model.Material)

    <div class="form-group">
        <div>
            @Html.CheckBoxFor(model => model.ApplyToExisting)
            <label for="ApplyToExisting">Apply to existing areas?</label>
        </div>
    </div>
    <div class="form-actions no-color btn-group">
        @Html.ActionLink("Cancel", "Index", new { id = Model.ModelId }, new { @class = "btn btn-primary" })
        <input type="submit" value="Delete" class="btn btn-default" />
    </div>
}
